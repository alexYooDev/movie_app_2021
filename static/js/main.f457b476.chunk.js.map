{"version":3,"sources":["movie.js","App.js","index.js"],"names":["Movie","title","year","runtime","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAkCeA,MA/Bf,YAAmE,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACtD,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKR,EAAOA,MAAOA,IACrC,sBAAKM,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BN,IAC9B,oBAAIM,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,oBAAIL,UAAU,iBAAd,SAAgCJ,IAChC,oBAAGI,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBC0COC,G,wNAjDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,yDANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,uDAWZ,WAEEQ,KAAKN,c,oBAEP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAACe,GAAD,OACV,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,QAASsB,EAAMtB,QACfF,MAAOwB,EAAMxB,MACbK,OAAQmB,EAAMnB,OACdF,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,oBAPTF,EAAMC,e,GAlCTE,IAAMC,YCNxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f457b476.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Movie({ title, year, runtime, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title}></img>\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <h5 className=\"movie__runtime\">{runtime}</h5>\r\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  runtime: PropTypes.number.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\nimport axios from 'axios';\nimport Movie from './movie';\nimport './Movie.css';\nimport './App.css';\n\n//class component 생성, component를 만들 때 마다 모든 것을 구현하지 않기 위해 extends(확장)함\n//state 객체에 변하는 데이터를 저장\n\n//https://yts-proxy.now.sh/list_movies.json\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  // 데이터를 가져오는 데 시간이 걸릴 수 있으니 async == 비동기\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      'https://yts.mx/api/v2/list_movies.json?sort_by=rating'\n    ); //이 작업이 완료될 때 까지 대기\n    this.setState({ movies, isLoading: false }); // axios로 가져온 데이터를 state내 movies에 설정\n  };\n  //애플리케이션이 실행되면\n  componentDidMount() {\n    // JSON 안에 데이터를 가지고 와야하므로 변수에 저장\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state; // state에서 isLoading을 가져오라 (ES6문법)\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                runtime={movie.runtime}\n                title={movie.title}\n                genres={movie.genres}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\nexport default App;\n\n// 부모 컴포넌트에서 받아오는 prop이 가져오려는 prop과 동일한지 체크할 필요가 있음 ->  prop-types 다운로드\n//prop : 컴포넌트에게 정보를 주기 위한 것 (attribute 형태)\n//컴포넌트는 대문자로 시작해야 함, jsx = html과 javascript의 결합\n//위의 favorite은 prop(Food)안의 객체이고 이를 통해 정보를 자식 함수에 보냄\n//key: React의 component는 유일성을 만족해야 하기떄문에 key가 필요 -> function Food에 key를 전달하지 않지만 react 내부적으로 필요\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//하나의 component 만을 render해야 함\n// App 안에 여러 컴포넌트를 import 해서 사용\n"],"sourceRoot":""}